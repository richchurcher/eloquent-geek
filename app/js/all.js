function postForm(){return{link:function(t,o,s,e){t.create=function(){e.createPost()}},require:"^postDisplay",scope:!1,templateUrl:"/js/post/postForm.html"}}function postNav(){return{link:function(t,o,s,e){t.firstPost=function(){e.loadPost("first")},t.latestPost=function(){e.loadPost("latest")},t.previousPost=function(t){e.loadPost(t,"previous")},t.nextPost=function(t){e.loadPost(t,"next")},t.newPost=function(){e.newPost()}},require:"^postDisplay",scope:!1,templateUrl:"/js/post/postNav.html"}}function postDisplay(t,o){var s=function(){var s=this;s.loadPost=function(t,e){var n=new showdown.Converter,r={postId:t};return e&&(r.nav=e),o.get(r,function(t){t.body=n.makeHtml(t.body),s.post=t,s.style.css=t.style},function(){})},s.createPost=function(){return s.post.tags||(s.post.tags=""),o.save({title:s.post.title,body:s.post.body,style:s.post.style,image:s.post.image,tags:s.post.tags.split(" ")},function(o){var e=new showdown.Converter;o.body=e.makeHtml(o.body),t.trustAsHtml(o.body),s.style.css=o.style,s.post=o,s.showCreateForm=!1})},s.post||s.loadPost("latest"),s.newPost=function(){for(var t in s.post)s.post[t]=null;s.showCreateForm=!0,s.style.css=""}};return{bindToController:!0,controller:s,controllerAs:"vm",scope:{style:"="},templateUrl:"/js/post/postDisplay.html"}}function postFactory(t){return t("/posts/:postId/:nav")}angular.module("eg",["post"]).config(["$resourceProvider",function(t){t.defaults.stripTrailingSlashes=!1}]).controller("EGCtrl",["$scope",function(t){t.style={css:"wombat"}}]),angular.module("post",["ngResource"]),angular.module("post").directive("postForm",[postForm]),angular.module("post").directive("postNav",[postNav]),angular.module("post").directive("postDisplay",["$sce","postApiService",postDisplay]).filter("trusted",["$sce",function(t){return function(o){return t.trustAsHtml(o)}}]),angular.module("post").factory("postApiService",["$resource",postFactory]);
//# sourceMappingURL=data:application/json;base64,